[1mdiff --git a/src/ucp/core/ucp_worker.c b/src/ucp/core/ucp_worker.c[m
[1mindex 5adcee9..830c44c 100644[m
[1m--- a/src/ucp/core/ucp_worker.c[m
[1m+++ b/src/ucp/core/ucp_worker.c[m
[36m@@ -1777,6 +1777,9 @@[m [mucp_worker_print_used_tls(ucp_worker_h worker, ucp_worker_cfg_index_t cfg_index)[m
     int amo_emul                    = 0;[m
     int num_valid_lanes             = 0;[m
     ucp_lane_index_t lane;[m
[32m+[m[32m    // TODO: PP-HW-UCX[m
[32m+[m[32m    ucp_config_t *config;[m
[32m+[m[32m    ucs_status_t status;[m
 [m
     ucp_ep_config_name(worker, cfg_index, &strb);[m
 [m
[36m@@ -1853,6 +1856,15 @@[m [mucp_worker_print_used_tls(ucp_worker_h worker, ucp_worker_cfg_index_t cfg_index)[m
     ucs_string_buffer_rtrim(&strb, "; ");[m
 [m
     ucs_info("%s", ucs_string_buffer_cstr(&strb));[m
[32m+[m
[32m+[m[32m    // TODO: PP-HW-UCX[m
[32m+[m[32m    status = ucp_config_read(NULL, NULL, &config);[m
[32m+[m[32m    if (status != UCS_OK){[m
[32m+[m[32m        printf("Fail.\n");[m
[32m+[m[32m        return;[m
[32m+[m[32m    }[m[41m   [m
[32m+[m[32m    ucp_config_print(config, stdout, ucs_string_buffer_cstr(&strb), UCS_CONFIG_PRINT_TLS);[m
[32m+[m[32m    ucp_config_release(config);[m
 }[m
 [m
 static ucs_status_t ucp_worker_init_mpools(ucp_worker_h worker)[m
[36m@@ -2072,6 +2084,10 @@[m [mucs_status_t ucp_worker_get_ep_config(ucp_worker_h worker,[m
     }[m
 [m
     ep_cfg_index = ucs_array_length(&worker->ep_config) - 1;[m
[32m+[m[41m    [m
[32m+[m[32m    // ucp_config_read(NULL, NULL, &config);[m
[32m+[m[32m    // ucp_config_print(config, stdout, NULL, UCS_CONFIG_PRINT_TLS);[m
[32m+[m[32m    // ucp_config_release(config);[m
 [m
     if (ep_init_flags & UCP_EP_INIT_FLAG_INTERNAL) {[m
         /* Do not initialize short protocol thresholds for internal endpoints,[m
[1mdiff --git a/src/ucs/config/parser.c b/src/ucs/config/parser.c[m
[1mindex a13d508..6c88298 100644[m
[1m--- a/src/ucs/config/parser.c[m
[1m+++ b/src/ucs/config/parser.c[m
[36m@@ -1878,7 +1878,17 @@[m [mvoid ucs_config_parser_print_opts(FILE *stream, const char *title, const void *o[m
     }[m
 [m
     // TODO: PP-HW-UCX[m
[31m-    if (flags /*& UCS_CONFIG_PRINT_TLS*/) {[m
[32m+[m[32m    if (flags & UCS_CONFIG_PRINT_TLS) {[m
[32m+[m[32m        // 1. print Line 1[m
[32m+[m[32m        for (char **envp = environ; *envp != NULL; ++envp) {[m
[32m+[m[32m            char *env_str = ucs_strdup(*envp, "env_str");[m
[32m+[m[32m            char *result = strstr(env_str, "UCX_TLS");[m
[32m+[m[32m            if (result == NULL) continue;[m[41m [m
[32m+[m[32m            printf("%s\n", env_str);[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        // 2. print Line 2[m
[32m+[m[32m        printf("%s\n", title);[m
 [m
     }[m
 [m
[1mdiff --git a/src/ucs/config/types.h b/src/ucs/config/types.h[m
[1mindex c300a6b..cf2c72a 100644[m
[1m--- a/src/ucs/config/types.h[m
[1m+++ b/src/ucs/config/types.h[m
[36m@@ -90,7 +90,8 @@[m [mtypedef enum {[m
     UCS_CONFIG_PRINT_HEADER          = UCS_BIT(1),[m
     UCS_CONFIG_PRINT_DOC             = UCS_BIT(2),[m
     UCS_CONFIG_PRINT_HIDDEN          = UCS_BIT(3),[m
[31m-    UCS_CONFIG_PRINT_COMMENT_DEFAULT = UCS_BIT(4)[m
[32m+[m[32m    UCS_CONFIG_PRINT_COMMENT_DEFAULT = UCS_BIT(4),[m
[32m+[m[32m    UCS_CONFIG_PRINT_TLS             = UCS_BIT(5)[m
 } ucs_config_print_flags_t;[m
 [m
 [m
